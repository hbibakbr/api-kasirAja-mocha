{
  "stats": {
    "suites": 5,
    "tests": 25,
    "passes": 25,
    "pending": 0,
    "failures": 0,
    "start": "2024-11-29T23:36:15.664Z",
    "end": "2024-11-29T23:36:45.292Z",
    "duration": 29628,
    "testsRegistered": 25,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "9a545bdc-7232-45ce-910d-f781eecbd818",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b5c298c5-bcad-4de4-8621-535caf16953d",
          "title": "End to End Categories Management",
          "fullFile": "D:\\QA\\mocha-chai\\api-mocha-kasirAja\\test\\suites\\category.suite.js",
          "file": "\\test\\suites\\category.suite.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"End to End Categories Management\"",
              "fullTitle": "End to End Categories Management \"before all\" hook in \"End to End Categories Management\"",
              "timedOut": false,
              "duration": 4969,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "accessToken = await getAccessToken();",
              "err": {},
              "uuid": "5f140510-1028-4e96-b847-df7a4f25e8d5",
              "parentUUID": "b5c298c5-bcad-4de4-8621-535caf16953d",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "POST - Add Category",
              "fullTitle": "End to End Categories Management POST - Add Category",
              "timedOut": false,
              "duration": 686,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await postAddCategory(accessToken);\ncategoryId = response.body.data.categoryId;\nexpect((await response).status).to.equal(201);\nexpect((await response).body.message).to.equal('Category berhasil ditambahkan');\nexpect((await response).body.status).to.equal('success');\nconsole.log(\"Status:\", response.status);\nconsole.log(\"Response Body:\", response.body);",
              "err": {},
              "uuid": "5b91e965-53e9-4d28-ab9c-75543fa9f70e",
              "parentUUID": "b5c298c5-bcad-4de4-8621-535caf16953d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET - Category Detail",
              "fullTitle": "End to End Categories Management GET - Category Detail",
              "timedOut": false,
              "duration": 292,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await getCategoryDetail(categoryId, accessToken);\nexpect((await response).status).to.equal(200);\nexpect((await response).body.status).to.equal('success');\nconsole.log(\"Status:\", response.status);\nconsole.log(\"Response Body:\", response.body);",
              "err": {},
              "uuid": "02dc1e14-0ab4-4042-a790-5bcd64af1473",
              "parentUUID": "b5c298c5-bcad-4de4-8621-535caf16953d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET - Category List",
              "fullTitle": "End to End Categories Management GET - Category List",
              "timedOut": false,
              "duration": 395,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await getCategoryList(accessToken);\nexpect((await response).status).to.equal(200);\nexpect((await response).body.status).to.equal('success');\nconsole.log(\"Status:\", response.status);\nconsole.log(\"Response Body:\", response.body.data);",
              "err": {},
              "uuid": "4566d060-65f2-44e1-ba20-1583bba73549",
              "parentUUID": "b5c298c5-bcad-4de4-8621-535caf16953d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PUT - Update Category",
              "fullTitle": "End to End Categories Management PUT - Update Category",
              "timedOut": false,
              "duration": 401,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const expectedName = 'Update-Milky';\nconst response = await putUpdateCategory(categoryId, accessToken);\nexpect((await response).status).to.equal(200);\nexpect((await response).body.status).to.equal('success');\nexpect((await response).body.data.name).to.equal(expectedName);\nconsole.log(\"Status:\", response.status);\nconsole.log(\"Response Body:\", response.body);",
              "err": {},
              "uuid": "3224dfe7-1740-41ed-a5f1-ccbe134a5e80",
              "parentUUID": "b5c298c5-bcad-4de4-8621-535caf16953d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "DELETE - Category",
              "fullTitle": "End to End Categories Management DELETE - Category",
              "timedOut": false,
              "duration": 284,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await deleteCategory(categoryId, accessToken);\nexpect((await response).status).to.equal(200);\nexpect((await response).body.status).to.equal('success');\nexpect((await response).body.data).to.be.an('object').that.is.empty;\nconsole.log(\"Status:\", response.status);\nconsole.log(\"Response Body:\", response.body);",
              "err": {},
              "uuid": "3f0a7b50-9139-4e8b-a8c8-38b229512cca",
              "parentUUID": "b5c298c5-bcad-4de4-8621-535caf16953d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5b91e965-53e9-4d28-ab9c-75543fa9f70e",
            "02dc1e14-0ab4-4042-a790-5bcd64af1473",
            "4566d060-65f2-44e1-ba20-1583bba73549",
            "3224dfe7-1740-41ed-a5f1-ccbe134a5e80",
            "3f0a7b50-9139-4e8b-a8c8-38b229512cca"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2058,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "34564cd0-0cf4-4b9d-930a-1e728be23ab1",
          "title": "End to End Customer Management",
          "fullFile": "D:\\QA\\mocha-chai\\api-mocha-kasirAja\\test\\suites\\customer.suite.js",
          "file": "\\test\\suites\\customer.suite.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"End to End Customer Management\"",
              "fullTitle": "End to End Customer Management \"before all\" hook in \"End to End Customer Management\"",
              "timedOut": false,
              "duration": 4517,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "accessToken = await getAccessToken();",
              "err": {},
              "uuid": "71c72fce-5437-4be9-8919-638ce5a9d240",
              "parentUUID": "34564cd0-0cf4-4b9d-930a-1e728be23ab1",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "POST - Add Customer",
              "fullTitle": "End to End Customer Management POST - Add Customer",
              "timedOut": false,
              "duration": 518,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await postAddCustomer(accessToken);\ncustomerId = response.body.data.customerId;\nexpect((await response).status).to.equal(201);\nexpect((await response).body.message).to.equal('Customer berhasil ditambahkan');\nexpect((await response).body.status).to.equal('success');\nconsole.log(\"Status:\", response.status);\nconsole.log(\"Response Body:\", response.body);",
              "err": {},
              "uuid": "e17a7112-3adf-4d4e-81c8-0cab7c5d8d61",
              "parentUUID": "34564cd0-0cf4-4b9d-930a-1e728be23ab1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET - Customer Detail",
              "fullTitle": "End to End Customer Management GET - Customer Detail",
              "timedOut": false,
              "duration": 410,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await getCustomerDetail(customerId, accessToken);\nexpect((await response).status).to.equal(200);\nexpect((await response).body.status).to.equal('success');\nconsole.log(\"Status:\", response.status);\nconsole.log(\"Response Body:\", response.body);",
              "err": {},
              "uuid": "b5fa4711-13e4-41ac-b710-91252c104de9",
              "parentUUID": "34564cd0-0cf4-4b9d-930a-1e728be23ab1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET - Customer List",
              "fullTitle": "End to End Customer Management GET - Customer List",
              "timedOut": false,
              "duration": 299,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await getCustomerList(accessToken);\nexpect((await response).status).to.equal(200);\nexpect((await response).body.status).to.equal('success');\nconsole.log(\"Status:\", response.status);\nconsole.log(\"Response Body:\", response.body.data);",
              "err": {},
              "uuid": "ae41cc8b-adf7-477d-b9a6-3f920075b88c",
              "parentUUID": "34564cd0-0cf4-4b9d-930a-1e728be23ab1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PUT - Update Customer",
              "fullTitle": "End to End Customer Management PUT - Update Customer",
              "timedOut": false,
              "duration": 380,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await putUpdateCustomer(customerId, accessToken);\nexpect((await response).status).to.equal(200);\nexpect((await response).body.status).to.equal('success');\nconsole.log(\"Status:\", response.status);\nconsole.log(\"Response Body:\", response.body);",
              "err": {},
              "uuid": "204f0559-25d3-42ea-b70b-5aba8030c587",
              "parentUUID": "34564cd0-0cf4-4b9d-930a-1e728be23ab1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "DELETE - Customer",
              "fullTitle": "End to End Customer Management DELETE - Customer",
              "timedOut": false,
              "duration": 507,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await deleteCustomer(customerId, accessToken);\nexpect((await response).status).to.equal(200);\nexpect((await response).body.status).to.equal('success');\nexpect((await response).body.data).to.be.an('object').that.is.empty;\nconsole.log(\"Status:\", response.status);\nconsole.log(\"Response Body:\", response.body);",
              "err": {},
              "uuid": "af2852b9-4074-489e-b2c0-0c49228d10b7",
              "parentUUID": "34564cd0-0cf4-4b9d-930a-1e728be23ab1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e17a7112-3adf-4d4e-81c8-0cab7c5d8d61",
            "b5fa4711-13e4-41ac-b710-91252c104de9",
            "ae41cc8b-adf7-477d-b9a6-3f920075b88c",
            "204f0559-25d3-42ea-b70b-5aba8030c587",
            "af2852b9-4074-489e-b2c0-0c49228d10b7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2114,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "1c7ad6b5-136f-43cf-bdb3-12e50187ce24",
          "title": "End to End Products Management",
          "fullFile": "D:\\QA\\mocha-chai\\api-mocha-kasirAja\\test\\suites\\product.suite.js",
          "file": "\\test\\suites\\product.suite.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"End to End Products Management\"",
              "fullTitle": "End to End Products Management \"before all\" hook in \"End to End Products Management\"",
              "timedOut": false,
              "duration": 2998,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "accessToken = await getAccessToken();\nespressoId = '08a10107-e0de-4275-b705-8ca5e233add7';",
              "err": {},
              "uuid": "66046378-8771-46a1-9402-ca0cdaa8678d",
              "parentUUID": "1c7ad6b5-136f-43cf-bdb3-12e50187ce24",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "POST - Add Product",
              "fullTitle": "End to End Products Management POST - Add Product",
              "timedOut": false,
              "duration": 1593,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await postAddProduct(espressoId, accessToken);\nproductId = response.body.data.productId;\nexpect((await response).status).to.equal(201);\nexpect((await response).body.message).to.equal('Product berhasil ditambahkan');\nexpect((await response).body.status).to.equal('success');\nconsole.log(\"Status:\", response.status);\nconsole.log(\"Response Body:\", response.body);",
              "err": {},
              "uuid": "1f7212fd-f3c7-48c6-b261-4fb65fe1a141",
              "parentUUID": "1c7ad6b5-136f-43cf-bdb3-12e50187ce24",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET - Product Detail",
              "fullTitle": "End to End Products Management GET - Product Detail",
              "timedOut": false,
              "duration": 324,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await getProductDetail(productId, accessToken);\nexpect((await response).status).to.equal(200);\nexpect((await response).body.status).to.equal('success');\nconsole.log(\"Status:\", response.status);\nconsole.log(\"Response Body:\", response.body);",
              "err": {},
              "uuid": "60e477dd-b341-4c6d-989a-7959ce0530e2",
              "parentUUID": "1c7ad6b5-136f-43cf-bdb3-12e50187ce24",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET - Product List",
              "fullTitle": "End to End Products Management GET - Product List",
              "timedOut": false,
              "duration": 390,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await getProductList(accessToken);\nexpect((await response).status).to.equal(200);\nexpect((await response).body.status).to.equal('success');\nconsole.log(\"Status:\", response.status);\nconsole.log(\"Response Body:\", response.body.data);",
              "err": {},
              "uuid": "05f4657a-0780-433a-a251-7be6a40a72d1",
              "parentUUID": "1c7ad6b5-136f-43cf-bdb3-12e50187ce24",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PUT - Update Product",
              "fullTitle": "End to End Products Management PUT - Update Product",
              "timedOut": false,
              "duration": 416,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await putUpdateProduct(espressoId, productId, accessToken);\nexpect((await response).status).to.equal(200);\nexpect((await response).body.status).to.equal('success');\nconsole.log(\"Status:\", response.status);\nconsole.log(\"Response Body:\", response.body);",
              "err": {},
              "uuid": "847de8b7-b075-438e-87e4-0c9c23b455bf",
              "parentUUID": "1c7ad6b5-136f-43cf-bdb3-12e50187ce24",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "DELETE - Product",
              "fullTitle": "End to End Products Management DELETE - Product",
              "timedOut": false,
              "duration": 502,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await deleteProduct(productId, accessToken);\nexpect((await response).status).to.equal(200);\nexpect((await response).body.status).to.equal('success');\nexpect((await response).body.message).to.equal('Product berhasil dihapus')\nconsole.log(\"Status:\", response.status);\nconsole.log(\"Response Body:\", response.body);",
              "err": {},
              "uuid": "ff8598fe-2715-4c00-ad76-f91706eda8f7",
              "parentUUID": "1c7ad6b5-136f-43cf-bdb3-12e50187ce24",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1f7212fd-f3c7-48c6-b261-4fb65fe1a141",
            "60e477dd-b341-4c6d-989a-7959ce0530e2",
            "05f4657a-0780-433a-a251-7be6a40a72d1",
            "847de8b7-b075-438e-87e4-0c9c23b455bf",
            "ff8598fe-2715-4c00-ad76-f91706eda8f7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3225,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "ba697b6f-1249-4263-9e65-7290bdb79ee6",
          "title": "End to End Unit Management Testing",
          "fullFile": "D:\\QA\\mocha-chai\\api-mocha-kasirAja\\test\\suites\\unit.suite.js",
          "file": "\\test\\suites\\unit.suite.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"End to End Unit Management Testing\"",
              "fullTitle": "End to End Unit Management Testing \"before all\" hook in \"End to End Unit Management Testing\"",
              "timedOut": false,
              "duration": 2200,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "accessToken = await getAccessToken();",
              "err": {},
              "uuid": "ecb9b65f-e028-46b4-a2d6-e9bf934948d9",
              "parentUUID": "ba697b6f-1249-4263-9e65-7290bdb79ee6",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "POST - Add Unit",
              "fullTitle": "End to End Unit Management Testing POST - Add Unit",
              "timedOut": false,
              "duration": 483,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await postCreateUnit(accessToken);\nunitId = response.body.data.unitId\nexpect((await response).status).to.equal(201);\nexpect((await response).body.message).to.equal('Unit berhasil ditambahkan');\nexpect((await response).body.status).to.equal('success');\nexpect((await response).body.data.name).to.equal('gram');\nconsole.log(\"Status:\", response.status);\nconsole.log(\"Response Body:\", response.body);",
              "err": {},
              "uuid": "6365aca8-edda-4de1-9358-8227710ff1f5",
              "parentUUID": "ba697b6f-1249-4263-9e65-7290bdb79ee6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get - Unit Detail",
              "fullTitle": "End to End Unit Management Testing Get - Unit Detail",
              "timedOut": false,
              "duration": 333,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await getUnitDetail(unitId, accessToken);\nexpect((await response).status).to.equal(200);\nexpect((await response).body.status).to.equal('success');\nconsole.log(\"Status:\", response.status);\nconsole.log(\"Response Body:\", response.body);",
              "err": {},
              "uuid": "61e7aa1c-6914-4a8b-b54c-721e72442510",
              "parentUUID": "ba697b6f-1249-4263-9e65-7290bdb79ee6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET - User List",
              "fullTitle": "End to End Unit Management Testing GET - User List",
              "timedOut": false,
              "duration": 384,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await getUnitList(accessToken);\nexpect((await response).status).to.equal(200);\nexpect((await response).body.status).to.equal('success');\nconsole.log(\"Status:\", response.status);\nconsole.log(\"Response Body:\", response.body.data);",
              "err": {},
              "uuid": "82323b03-093e-46c6-bf6f-c469e9957cbe",
              "parentUUID": "ba697b6f-1249-4263-9e65-7290bdb79ee6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PUT - Update Unit",
              "fullTitle": "End to End Unit Management Testing PUT - Update Unit",
              "timedOut": false,
              "duration": 288,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await putUpdateUnit(unitId, accessToken);\nconst expectedName = 'update-gram';\nexpect((await response).status).to.equal(200);\nexpect((await response).body.status).to.equal('success');\nexpect((await response).body.data.name).to.equal(expectedName);\nconsole.log(\"Status:\", response.status);\nconsole.log(\"Response Body:\", response.body);",
              "err": {},
              "uuid": "810dd0d3-4038-437e-a757-ab887c24e4e2",
              "parentUUID": "ba697b6f-1249-4263-9e65-7290bdb79ee6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "DELETE - Unit",
              "fullTitle": "End to End Unit Management Testing DELETE - Unit",
              "timedOut": false,
              "duration": 235,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await deleteUnit(unitId, accessToken);\nexpect((await response).status).to.equal(200);\nexpect((await response).body.status).to.equal('success');\nexpect((await response).body.data).to.be.an('object').that.is.empty;\nconsole.log(\"Status:\", response.status);\nconsole.log(\"Response Body:\", response.body);",
              "err": {},
              "uuid": "57d911de-6f95-4195-a634-4952c160a45c",
              "parentUUID": "ba697b6f-1249-4263-9e65-7290bdb79ee6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6365aca8-edda-4de1-9358-8227710ff1f5",
            "61e7aa1c-6914-4a8b-b54c-721e72442510",
            "82323b03-093e-46c6-bf6f-c469e9957cbe",
            "810dd0d3-4038-437e-a757-ab887c24e4e2",
            "57d911de-6f95-4195-a634-4952c160a45c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1723,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "6e595a4f-f34d-41b6-ac67-7d519ee63634",
          "title": "End to End User Management Testing",
          "fullFile": "D:\\QA\\mocha-chai\\api-mocha-kasirAja\\test\\suites\\user.suite.js",
          "file": "\\test\\suites\\user.suite.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"End to End User Management Testing\"",
              "fullTitle": "End to End User Management Testing \"before all\" hook in \"End to End User Management Testing\"",
              "timedOut": false,
              "duration": 1351,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "accessToken = await getAccessToken();",
              "err": {},
              "uuid": "604ef31a-3749-467a-9d68-ea475ad131f8",
              "parentUUID": "6e595a4f-f34d-41b6-ac67-7d519ee63634",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "POST - Create User Successful",
              "fullTitle": "End to End User Management Testing POST - Create User Successful",
              "timedOut": false,
              "duration": 3121,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await postCreateUser(accessToken);\nuserId = response.body.data.userId\nexpect(response.status).to.equal(201);\nexpect(response.body.message).to.equal('User berhasil ditambahkan');\nexpect(response.body.status).to.equal('success');\nconsole.log(\"Status:\", response.status);\nconsole.log(\"Response Body:\", response.body);",
              "err": {},
              "uuid": "0a74d058-870d-4e5c-88b7-6caec9997e52",
              "parentUUID": "6e595a4f-f34d-41b6-ac67-7d519ee63634",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET - User Detail ",
              "fullTitle": "End to End User Management Testing GET - User Detail ",
              "timedOut": false,
              "duration": 308,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await getUser(userId, accessToken);\nconst expectedName = 'akbar';\nexpect(response.status).to.equal(200);\nexpect(response.body.status).to.equal('success');\nexpect(response.body.data.user.name).to.equal(expectedName);\nconsole.log(\"Status:\", response.status);\nconsole.log(\"Response Body:\", response.body.data.user)",
              "err": {},
              "uuid": "3ddb0582-bc5b-4ea6-8205-182950e44d40",
              "parentUUID": "6e595a4f-f34d-41b6-ac67-7d519ee63634",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET - Users List",
              "fullTitle": "End to End User Management Testing GET - Users List",
              "timedOut": false,
              "duration": 305,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await getUserList(accessToken);\nexpect(response.status).to.equal(200);\nexpect(response.body.status).to.equal('success');\nconsole.log(\"Status:\", response.status);\nconsole.log(\"Response Body:\", response.body);",
              "err": {},
              "uuid": "71d9c903-e852-4255-bbe7-1bed7bea7bc7",
              "parentUUID": "6e595a4f-f34d-41b6-ac67-7d519ee63634",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PUT - Update User",
              "fullTitle": "End to End User Management Testing PUT - Update User",
              "timedOut": false,
              "duration": 309,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await putUpdateUser(userId, accessToken);\nconst expectedName = 'akbar-update'\nexpect(response.status).to.equal(200);\nexpect(response.body.status).to.equal('success');\nexpect(response.body.message).to.equal('User berhasil diupdate');\nexpect(response.body.data.name).to.equal(expectedName);\nconsole.log(\"Status:\", response.status);\nconsole.log(\"Response Body:\", response.body.data);",
              "err": {},
              "uuid": "ee93c5bb-e676-4d3f-ba53-1f81c2a9b63c",
              "parentUUID": "6e595a4f-f34d-41b6-ac67-7d519ee63634",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "DELETE - User Successful",
              "fullTitle": "End to End User Management Testing DELETE - User Successful",
              "timedOut": false,
              "duration": 390,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await deleteUser(userId, accessToken);\nexpect(response.status).to.equal(200);\nexpect(response.body.status).to.equal('success');\nexpect(response.body.message).to.equal('User berhasil dihapus');\nconsole.log(\"Status:\", response.status);\nconsole.log(\"Response Body:\", response.body);",
              "err": {},
              "uuid": "f5590d6c-1692-4689-95e4-150d14a980ef",
              "parentUUID": "6e595a4f-f34d-41b6-ac67-7d519ee63634",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0a74d058-870d-4e5c-88b7-6caec9997e52",
            "3ddb0582-bc5b-4ea6-8205-182950e44d40",
            "71d9c903-e852-4255-bbe7-1bed7bea7bc7",
            "ee93c5bb-e676-4d3f-ba53-1f81c2a9b63c",
            "f5590d6c-1692-4689-95e4-150d14a980ef"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4433,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.8.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}