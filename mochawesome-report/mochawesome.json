{
  "stats": {
    "suites": 5,
    "tests": 25,
    "passes": 25,
    "pending": 0,
    "failures": 0,
    "start": "2024-11-29T19:16:09.709Z",
    "end": "2024-11-29T19:17:14.666Z",
    "duration": 64957,
    "testsRegistered": 25,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "429439b6-2c18-4e1b-9e0c-9eec9fb6e1da",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "435cb658-5298-431c-81b8-9681a7840ad7",
          "title": "End to End Categories Management",
          "fullFile": "D:\\QA\\mocha-chai\\api-mocha-kasirAja\\test\\suites\\category.suite.js",
          "file": "\\test\\suites\\category.suite.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"End to End Categories Management\"",
              "fullTitle": "End to End Categories Management \"before all\" hook in \"End to End Categories Management\"",
              "timedOut": false,
              "duration": 4998,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "accessToken = await getAccessToken();",
              "err": {},
              "uuid": "053e2b79-806f-48bc-9049-3aa0d9142c51",
              "parentUUID": "435cb658-5298-431c-81b8-9681a7840ad7",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "POST - Add Category",
              "fullTitle": "End to End Categories Management POST - Add Category",
              "timedOut": false,
              "duration": 1505,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await postAddCategory(accessToken);\ncategoryId = response.body.data.categoryId;\nexpect((await response).status).to.equal(201);\nexpect((await response).body.message).to.equal('Category berhasil ditambahkan');\nexpect((await response).body.status).to.equal('success');\nconsole.log(\"Status:\", response.status);\nconsole.log(\"Response Body:\", response.body);",
              "err": {},
              "uuid": "956f73a4-bc99-4dfb-9c51-a9a16bbc7a3b",
              "parentUUID": "435cb658-5298-431c-81b8-9681a7840ad7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET - Category Detail",
              "fullTitle": "End to End Categories Management GET - Category Detail",
              "timedOut": false,
              "duration": 1329,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await getCategoryDetail(categoryId, accessToken);\nexpect((await response).status).to.equal(200);\nexpect((await response).body.status).to.equal('success');\nconsole.log(\"Status:\", response.status);\nconsole.log(\"Response Body:\", response.body);",
              "err": {},
              "uuid": "82ac31cd-f201-4ba4-a9f5-eb2ba2246d7c",
              "parentUUID": "435cb658-5298-431c-81b8-9681a7840ad7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET - Category List",
              "fullTitle": "End to End Categories Management GET - Category List",
              "timedOut": false,
              "duration": 1290,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await getCategoryList(accessToken);\nexpect((await response).status).to.equal(200);\nexpect((await response).body.status).to.equal('success');\nconsole.log(\"Status:\", response.status);\nconsole.log(\"Response Body:\", response.body.data);",
              "err": {},
              "uuid": "c6458765-f8c3-4d76-8e74-bce9e91d0f8a",
              "parentUUID": "435cb658-5298-431c-81b8-9681a7840ad7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PUT - Update Category",
              "fullTitle": "End to End Categories Management PUT - Update Category",
              "timedOut": false,
              "duration": 1565,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const expectedName = 'Update-Milky';\nconst response = await putUpdateCategory(categoryId, accessToken);\nexpect((await response).status).to.equal(200);\nexpect((await response).body.status).to.equal('success');\nexpect((await response).body.data.name).to.equal(expectedName);\nconsole.log(\"Status:\", response.status);\nconsole.log(\"Response Body:\", response.body);",
              "err": {},
              "uuid": "75671cf4-ac93-45bc-b869-3fb79850c485",
              "parentUUID": "435cb658-5298-431c-81b8-9681a7840ad7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "DELETE - Category",
              "fullTitle": "End to End Categories Management DELETE - Category",
              "timedOut": false,
              "duration": 1755,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await deleteCategory(categoryId, accessToken);\nexpect((await response).status).to.equal(200);\nexpect((await response).body.status).to.equal('success');\nexpect((await response).body.data).to.be.an('object').that.is.empty;\nconsole.log(\"Status:\", response.status);\nconsole.log(\"Response Body:\", response.body);",
              "err": {},
              "uuid": "c2c72f31-6947-421c-b8e7-28dab388368f",
              "parentUUID": "435cb658-5298-431c-81b8-9681a7840ad7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "956f73a4-bc99-4dfb-9c51-a9a16bbc7a3b",
            "82ac31cd-f201-4ba4-a9f5-eb2ba2246d7c",
            "c6458765-f8c3-4d76-8e74-bce9e91d0f8a",
            "75671cf4-ac93-45bc-b869-3fb79850c485",
            "c2c72f31-6947-421c-b8e7-28dab388368f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7444,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "3d74859a-ee3d-41e4-addb-b27f5455e9e3",
          "title": "End to End Customer Management",
          "fullFile": "D:\\QA\\mocha-chai\\api-mocha-kasirAja\\test\\suites\\customer.suite.js",
          "file": "\\test\\suites\\customer.suite.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"End to End Customer Management\"",
              "fullTitle": "End to End Customer Management \"before all\" hook in \"End to End Customer Management\"",
              "timedOut": false,
              "duration": 3944,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "accessToken = await getAccessToken();",
              "err": {},
              "uuid": "08778334-f854-4031-ad13-be1fe33f6899",
              "parentUUID": "3d74859a-ee3d-41e4-addb-b27f5455e9e3",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "POST - Add Customer",
              "fullTitle": "End to End Customer Management POST - Add Customer",
              "timedOut": false,
              "duration": 2145,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await postAddCustomer(accessToken);\ncustomerId = response.body.data.customerId;\nexpect((await response).status).to.equal(201);\nexpect((await response).body.message).to.equal('Customer berhasil ditambahkan');\nexpect((await response).body.status).to.equal('success');\nconsole.log(\"Status:\", response.status);\nconsole.log(\"Response Body:\", response.body);",
              "err": {},
              "uuid": "fed0bdd2-7571-4f3f-b55a-28626423fec6",
              "parentUUID": "3d74859a-ee3d-41e4-addb-b27f5455e9e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET - Customer Detail",
              "fullTitle": "End to End Customer Management GET - Customer Detail",
              "timedOut": false,
              "duration": 1045,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await getCustomerDetail(customerId, accessToken);\nexpect((await response).status).to.equal(200);\nexpect((await response).body.status).to.equal('success');\nconsole.log(\"Status:\", response.status);\nconsole.log(\"Response Body:\", response.body);",
              "err": {},
              "uuid": "a85ee9e8-50e0-4d08-85c3-4fda056fbe08",
              "parentUUID": "3d74859a-ee3d-41e4-addb-b27f5455e9e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET - Customer List",
              "fullTitle": "End to End Customer Management GET - Customer List",
              "timedOut": false,
              "duration": 1422,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await getCustomerList(accessToken);\nexpect((await response).status).to.equal(200);\nexpect((await response).body.status).to.equal('success');\nconsole.log(\"Status:\", response.status);\nconsole.log(\"Response Body:\", response.body.data);",
              "err": {},
              "uuid": "c1911a33-14e0-49e3-a01e-554262e6d8bb",
              "parentUUID": "3d74859a-ee3d-41e4-addb-b27f5455e9e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PUT - Update Customer",
              "fullTitle": "End to End Customer Management PUT - Update Customer",
              "timedOut": false,
              "duration": 1423,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await putUpdateCustomer(customerId, accessToken);\nexpect((await response).status).to.equal(200);\nexpect((await response).body.status).to.equal('success');\nconsole.log(\"Status:\", response.status);\nconsole.log(\"Response Body:\", response.body);",
              "err": {},
              "uuid": "03efc69b-7c9c-4458-8302-30eb4d0c8d15",
              "parentUUID": "3d74859a-ee3d-41e4-addb-b27f5455e9e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "DELETE - Customer",
              "fullTitle": "End to End Customer Management DELETE - Customer",
              "timedOut": false,
              "duration": 1078,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await deleteCustomer(customerId, accessToken);\nexpect((await response).status).to.equal(200);\nexpect((await response).body.status).to.equal('success');\nexpect((await response).body.data).to.be.an('object').that.is.empty;\nconsole.log(\"Status:\", response.status);\nconsole.log(\"Response Body:\", response.body);",
              "err": {},
              "uuid": "32133a78-0db3-497e-a508-d143492fc753",
              "parentUUID": "3d74859a-ee3d-41e4-addb-b27f5455e9e3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fed0bdd2-7571-4f3f-b55a-28626423fec6",
            "a85ee9e8-50e0-4d08-85c3-4fda056fbe08",
            "c1911a33-14e0-49e3-a01e-554262e6d8bb",
            "03efc69b-7c9c-4458-8302-30eb4d0c8d15",
            "32133a78-0db3-497e-a508-d143492fc753"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7113,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "e4514fc5-6354-4f55-adbb-b8001a020b8b",
          "title": "End to End Products Management",
          "fullFile": "D:\\QA\\mocha-chai\\api-mocha-kasirAja\\test\\suites\\product.suite.js",
          "file": "\\test\\suites\\product.suite.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"End to End Products Management\"",
              "fullTitle": "End to End Products Management \"before all\" hook in \"End to End Products Management\"",
              "timedOut": false,
              "duration": 4405,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "accessToken = await getAccessToken();\nespressoId = '08a10107-e0de-4275-b705-8ca5e233add7';",
              "err": {},
              "uuid": "8a312645-0d46-4f63-8c03-aae040680230",
              "parentUUID": "e4514fc5-6354-4f55-adbb-b8001a020b8b",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "POST - Add Product",
              "fullTitle": "End to End Products Management POST - Add Product",
              "timedOut": false,
              "duration": 2302,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await postAddProduct(espressoId, accessToken);\nproductId = response.body.data.productId;\nexpect((await response).status).to.equal(201);\nexpect((await response).body.message).to.equal('Product berhasil ditambahkan');\nexpect((await response).body.status).to.equal('success');\nconsole.log(\"Status:\", response.status);\nconsole.log(\"Response Body:\", response.body);",
              "err": {},
              "uuid": "33dd5431-9755-449a-95d1-edf1acb0a7f1",
              "parentUUID": "e4514fc5-6354-4f55-adbb-b8001a020b8b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET - Product Detail",
              "fullTitle": "End to End Products Management GET - Product Detail",
              "timedOut": false,
              "duration": 1402,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await getProductDetail(productId, accessToken);\nexpect((await response).status).to.equal(200);\nexpect((await response).body.status).to.equal('success');\nconsole.log(\"Status:\", response.status);\nconsole.log(\"Response Body:\", response.body);",
              "err": {},
              "uuid": "a5dbf4f2-bbb4-44f1-9a2c-c1d9e5eb3f72",
              "parentUUID": "e4514fc5-6354-4f55-adbb-b8001a020b8b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET - Product List",
              "fullTitle": "End to End Products Management GET - Product List",
              "timedOut": false,
              "duration": 1545,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await getProductList(accessToken);\nexpect((await response).status).to.equal(200);\nexpect((await response).body.status).to.equal('success');\nconsole.log(\"Status:\", response.status);\nconsole.log(\"Response Body:\", response.body.data);",
              "err": {},
              "uuid": "12eb0f4b-c14e-4bf8-85d9-b0b0dff11214",
              "parentUUID": "e4514fc5-6354-4f55-adbb-b8001a020b8b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PUT - Update Product",
              "fullTitle": "End to End Products Management PUT - Update Product",
              "timedOut": false,
              "duration": 1478,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await putUpdateProduct(espressoId, productId, accessToken);\nexpect((await response).status).to.equal(200);\nexpect((await response).body.status).to.equal('success');\nconsole.log(\"Status:\", response.status);\nconsole.log(\"Response Body:\", response.body);",
              "err": {},
              "uuid": "baad2f2a-bf92-4c13-a279-c66e0bf1f21c",
              "parentUUID": "e4514fc5-6354-4f55-adbb-b8001a020b8b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "DELETE - Product",
              "fullTitle": "End to End Products Management DELETE - Product",
              "timedOut": false,
              "duration": 1534,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await deleteProduct(productId, accessToken);\nexpect((await response).status).to.equal(200);\nexpect((await response).body.status).to.equal('success');\nexpect((await response).body.message).to.equal('Product berhasil dihapus')\nconsole.log(\"Status:\", response.status);\nconsole.log(\"Response Body:\", response.body);",
              "err": {},
              "uuid": "d35a51e7-0c76-4cdb-8380-0fc1701053b8",
              "parentUUID": "e4514fc5-6354-4f55-adbb-b8001a020b8b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "33dd5431-9755-449a-95d1-edf1acb0a7f1",
            "a5dbf4f2-bbb4-44f1-9a2c-c1d9e5eb3f72",
            "12eb0f4b-c14e-4bf8-85d9-b0b0dff11214",
            "baad2f2a-bf92-4c13-a279-c66e0bf1f21c",
            "d35a51e7-0c76-4cdb-8380-0fc1701053b8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8261,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "6fb297f4-3f9f-431f-8f15-aba625cdb2da",
          "title": "End to End Unit Management Testing",
          "fullFile": "D:\\QA\\mocha-chai\\api-mocha-kasirAja\\test\\suites\\unit.suite.js",
          "file": "\\test\\suites\\unit.suite.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"End to End Unit Management Testing\"",
              "fullTitle": "End to End Unit Management Testing \"before all\" hook in \"End to End Unit Management Testing\"",
              "timedOut": false,
              "duration": 4575,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "accessToken = await getAccessToken();",
              "err": {},
              "uuid": "c3ec8db5-a6ca-48a4-9a9a-f28245f240f3",
              "parentUUID": "6fb297f4-3f9f-431f-8f15-aba625cdb2da",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "POST - Add Unit",
              "fullTitle": "End to End Unit Management Testing POST - Add Unit",
              "timedOut": false,
              "duration": 2092,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await postCreateUnit(accessToken);\nunitId = response.body.data.unitId\nexpect((await response).status).to.equal(201);\nexpect((await response).body.message).to.equal('Unit berhasil ditambahkan');\nexpect((await response).body.status).to.equal('success');\nexpect((await response).body.data.name).to.equal('gram');\nconsole.log(\"Status:\", response.status);\nconsole.log(\"Response Body:\", response.body);",
              "err": {},
              "uuid": "15f8feaf-803b-43c4-9b4d-80b1e24a0ad8",
              "parentUUID": "6fb297f4-3f9f-431f-8f15-aba625cdb2da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get - Unit Detail",
              "fullTitle": "End to End Unit Management Testing Get - Unit Detail",
              "timedOut": false,
              "duration": 1439,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await getUnitDetail(unitId, accessToken);\nexpect((await response).status).to.equal(200);\nexpect((await response).body.status).to.equal('success');\nconsole.log(\"Status:\", response.status);\nconsole.log(\"Response Body:\", response.body);",
              "err": {},
              "uuid": "fcb55d1a-cf53-4147-8436-fc12500c3577",
              "parentUUID": "6fb297f4-3f9f-431f-8f15-aba625cdb2da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET - User List",
              "fullTitle": "End to End Unit Management Testing GET - User List",
              "timedOut": false,
              "duration": 1393,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await getUnitList(accessToken);\nexpect((await response).status).to.equal(200);\nexpect((await response).body.status).to.equal('success');\nconsole.log(\"Status:\", response.status);\nconsole.log(\"Response Body:\", response.body.data);",
              "err": {},
              "uuid": "6eb0cb78-bae1-4ab4-b5fc-65ced9406213",
              "parentUUID": "6fb297f4-3f9f-431f-8f15-aba625cdb2da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PUT - Update Unit",
              "fullTitle": "End to End Unit Management Testing PUT - Update Unit",
              "timedOut": false,
              "duration": 1283,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await putUpdateUnit(unitId, accessToken);\nconst expectedName = 'update-gram';\nexpect((await response).status).to.equal(200);\nexpect((await response).body.status).to.equal('success');\nexpect((await response).body.data.name).to.equal(expectedName);\nconsole.log(\"Status:\", response.status);\nconsole.log(\"Response Body:\", response.body);",
              "err": {},
              "uuid": "cda526e1-c2e1-41fd-8a7c-2f0090c024aa",
              "parentUUID": "6fb297f4-3f9f-431f-8f15-aba625cdb2da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "DELETE - Unit",
              "fullTitle": "End to End Unit Management Testing DELETE - Unit",
              "timedOut": false,
              "duration": 1383,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await deleteUnit(unitId, accessToken);\nexpect((await response).status).to.equal(200);\nexpect((await response).body.status).to.equal('success');\nexpect((await response).body.data).to.be.an('object').that.is.empty;\nconsole.log(\"Status:\", response.status);\nconsole.log(\"Response Body:\", response.body);",
              "err": {},
              "uuid": "32633360-c4cc-4ed7-aead-9a1a7d134bb4",
              "parentUUID": "6fb297f4-3f9f-431f-8f15-aba625cdb2da",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "15f8feaf-803b-43c4-9b4d-80b1e24a0ad8",
            "fcb55d1a-cf53-4147-8436-fc12500c3577",
            "6eb0cb78-bae1-4ab4-b5fc-65ced9406213",
            "cda526e1-c2e1-41fd-8a7c-2f0090c024aa",
            "32633360-c4cc-4ed7-aead-9a1a7d134bb4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7590,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "a34e263c-1d75-42ab-8c02-82ef263c9683",
          "title": "End to End User Management Testing",
          "fullFile": "D:\\QA\\mocha-chai\\api-mocha-kasirAja\\test\\suites\\user.suite.js",
          "file": "\\test\\suites\\user.suite.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"End to End User Management Testing\"",
              "fullTitle": "End to End User Management Testing \"before all\" hook in \"End to End User Management Testing\"",
              "timedOut": false,
              "duration": 5767,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "accessToken = await getAccessToken();",
              "err": {},
              "uuid": "196ac8a9-b243-49f1-ae02-28dfbda15e68",
              "parentUUID": "a34e263c-1d75-42ab-8c02-82ef263c9683",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "POST - Create User Successful",
              "fullTitle": "End to End User Management Testing POST - Create User Successful",
              "timedOut": false,
              "duration": 4406,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await postCreateUser(accessToken);\nuserId = response.body.data.userId\nexpect(response.status).to.equal(201);\nexpect(response.body.message).to.equal('User berhasil ditambahkan');\nexpect(response.body.status).to.equal('success');\nconsole.log(\"Status:\", response.status);\nconsole.log(\"Response Body:\", response.body);",
              "err": {},
              "uuid": "bbecc3f7-5f1f-4145-8c3d-23558f53faf6",
              "parentUUID": "a34e263c-1d75-42ab-8c02-82ef263c9683",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET - User Detail ",
              "fullTitle": "End to End User Management Testing GET - User Detail ",
              "timedOut": false,
              "duration": 1632,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await getUser(userId, accessToken);\nconst expectedName = 'akbar';\nexpect(response.status).to.equal(200);\nexpect(response.body.status).to.equal('success');\nexpect(response.body.data.user.name).to.equal(expectedName);\nconsole.log(\"Status:\", response.status);\nconsole.log(\"Response Body:\", response.body.data.user)",
              "err": {},
              "uuid": "08b0c906-1662-49a9-bd13-e4e1be5d2412",
              "parentUUID": "a34e263c-1d75-42ab-8c02-82ef263c9683",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET - Users List",
              "fullTitle": "End to End User Management Testing GET - Users List",
              "timedOut": false,
              "duration": 1527,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await getUserList(accessToken);\nexpect(response.status).to.equal(200);\nexpect(response.body.status).to.equal('success');\nconsole.log(\"Status:\", response.status);\nconsole.log(\"Response Body:\", response.body);",
              "err": {},
              "uuid": "49c0bff0-775a-4805-906e-70248af886c3",
              "parentUUID": "a34e263c-1d75-42ab-8c02-82ef263c9683",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PUT - Update User",
              "fullTitle": "End to End User Management Testing PUT - Update User",
              "timedOut": false,
              "duration": 1671,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await putUpdateUser(userId, accessToken);\nconst expectedName = 'akbar-update'\nexpect(response.status).to.equal(200);\nexpect(response.body.status).to.equal('success');\nexpect(response.body.message).to.equal('User berhasil diupdate');\nexpect(response.body.data.name).to.equal(expectedName);\nconsole.log(\"Status:\", response.status);\nconsole.log(\"Response Body:\", response.body.data);",
              "err": {},
              "uuid": "ff10e898-b815-4b26-8ee7-6558393260b3",
              "parentUUID": "a34e263c-1d75-42ab-8c02-82ef263c9683",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "DELETE - User Successful",
              "fullTitle": "End to End User Management Testing DELETE - User Successful",
              "timedOut": false,
              "duration": 1535,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await deleteUser(userId, accessToken);\nexpect(response.status).to.equal(200);\nexpect(response.body.status).to.equal('success');\nexpect(response.body.message).to.equal('User berhasil dihapus');\nconsole.log(\"Status:\", response.status);\nconsole.log(\"Response Body:\", response.body);",
              "err": {},
              "uuid": "1730d457-2627-4a22-be53-1b24a4d1a65a",
              "parentUUID": "a34e263c-1d75-42ab-8c02-82ef263c9683",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bbecc3f7-5f1f-4145-8c3d-23558f53faf6",
            "08b0c906-1662-49a9-bd13-e4e1be5d2412",
            "49c0bff0-775a-4805-906e-70248af886c3",
            "ff10e898-b815-4b26-8ee7-6558393260b3",
            "1730d457-2627-4a22-be53-1b24a4d1a65a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10771,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.8.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}